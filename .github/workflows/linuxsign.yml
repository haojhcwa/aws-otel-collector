# Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License").
# You may not use this file except in compliance with the License.
# A copy of the License is located at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# or in the "license" file accompanying this file. This file is distributed
# on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
# express or implied. See the License for the specific language governing
# permissions and limitations under the License.

name: Test Linux Sign

on:
  push:
    branches:
      - testlinuxsign

  # from collector and contrib repo
  repository_dispatch:
    types: [dependency-build]

env:
  IMAGE_NAME: aws-otel-collector
  PACKAGING_ROOT: build/packages
  ECR_REPO: aws/aws-otel-collector
  TF_VAR_aws_access_key_id: ${{ secrets.INTEG_TEST_AWS_KEY_ID }}
  TF_VAR_aws_secret_access_key: ${{ secrets.INTEG_TEST_AWS_KEY_SECRET }}
  PKG_SIGN_PRIVATE_KEY: ${{ secrets.AOC_PKG_SIGN_GPG_PRIVATE_KEY }}
jobs:


  build:
    runs-on: ubuntu-latest

    steps:
    # Set up building environment, patch the dev repo code on dispatch events.
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13

    - uses: actions/checkout@v2

    - name: Checkout dev opentelemetry-collector-contrib
      if: github.event_name == 'repository_dispatch'
      uses: actions/checkout@v2
      with:
        repository: ${{ github.repository_owner }}/opentelemetry-collector-contrib
        ref: main
        path: pkg/opentelemetry-collector-contrib

    - name: Checkout dev opentelemetry-collector
      if: github.event_name == 'repository_dispatch'
      uses: actions/checkout@v2
      with:
        repository: ${{ github.repository_owner }}/opentelemetry-collector
        ref: main
        path: pkg/opentelemetry-collector

    - name: append replace statement to go.mod to build with dev repo
      if: github.event_name == 'repository_dispatch'
      run: |
        echo "replace github.com/open-telemetry/opentelemetry-collector-contrib/exporter/awsxrayexporter => ./pkg/opentelemetry-collector-contrib/exporter/awsxrayexporter" >> go.mod
        echo "replace go.opentelemetry.io/collector => ./pkg/opentelemetry-collector" >> go.mod
        cat go.mod
        ls pkg

    # Build and archive binaries into cache.
    - name: Build Binaries
      run: make build

    - name: Cache binaries
      uses: actions/cache@v2
      with:
        key: "cached_binaries_${{ github.run_id }}"
        path: build

  packaging-rpm:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Build and archive rpms into cache.
      - uses: actions/checkout@v2

      - name: restore cached binaries
        uses: actions/cache@v2
        with:
          key: "cached_binaries_${{ github.run_id }}"
          path: build

      - name: Display structure of downloaded files
        run: ls -R

      - name: Build RPM
        run: |
          ARCH=x86_64 DEST=build/packages/linux/amd64 tools/packaging/linux/create_rpm.sh
          ARCH=aarch64 DEST=build/packages/linux/arm64 tools/packaging/linux/create_rpm.sh

      - name: Import Package Signing GPG Key
        run: |
          echo "$PKG_SIGN_PRIVATE_KEY" > pkg_sign_private.key
          gpg --import pkg_sign_private.key
          gpg --list-keys
          gpg --armor --export -a "haojh gpg test" > pkg_sign_public.key
          rpm --import pkg_sign_public.key
          echo "%_gpg_name haojh gpg test" > ~/.rpmmacros

      - name: Sign RPM Pakcage
          rpmsign --addsign build/packages/linux/*/*.rpm

      - name: Cache rpms
        uses: actions/cache@v2
        with:
          key: "cached_rpms_${{ github.run_id }}"
          path: build/packages

  packaging-deb:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Build and archive debs into cache.
      - uses: actions/checkout@v2

      - name: restore cached binaries
        uses: actions/cache@v2
        with:
          key: "cached_binaries_${{ github.run_id }}"
          path: build

      - name: Build Debs
        run: |
          ARCH=amd64 TARGET_SUPPORTED_ARCH=x86_64 DEST=build/packages/debian/amd64 tools/packaging/debian/create_deb.sh
          ARCH=arm64 TARGET_SUPPORTED_ARCH=aarch64 DEST=build/packages/debian/arm64 tools/packaging/debian/create_deb.sh

      - name: Import Package Signing GPG Key
        run: |
          echo "$PKG_SIGN_PRIVATE_KEY" > pkg_sign_private.key
          gpg --import pkg_sign_private.key
          gpg --list-keys

      - name: Sign RPM Pakcage
          dpkg-sig --sign origin -k "haojh@amazon.com" build/packages/debian/*/*.deb

      - name: Cache Debs
        uses: actions/cache@v2
        with:
          key: "cached_debs_${{ github.run_id }}"
          path: build/packages

  upload-artifacts:
    runs-on: ubuntu-latest
    needs: [packaging-rpm, packaging-deb]
    steps:
      - name: restore cached rpm package
        uses: actions/cache@v2
        with:
          path: build/packages
          key: "cached_debs_${{ github.run_id }}"

      - name: restore cached deb package
        uses: actions/cache@v2
        with:
          path: build/packages
          key: "cached_rpms_${{ github.run_id }}"

      - uses: actions/upload-artifact@v2
        with:
          name: linux-packages
          path: build/packages
